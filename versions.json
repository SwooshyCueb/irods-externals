{
    "avro": {
        "commitish": "release-1.11.0",
        "version_string": "1.11.0",
        "license": "Apache License 2.0",
        "consortium_build_number": "2",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p lang/c++/build",
            "cd lang/c++/build; rm -f CMakeCache.txt;TEMPLATE_CMAKE_EXECUTABLE -G 'Unix Makefiles' -DCMAKE_INSTALL_RPATH=/TEMPLATE_BOOST_RPATH\\;/TEMPLATE_CLANG_RUNTIME_RPATH -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DBOOST_ROOT=TEMPLATE_BOOST_ROOT -DCMAKE_CXX_COMPILER=TEMPLATE_CLANGPP_EXECUTABLE -DCMAKE_C_COMPILER=TEMPLATE_CLANG_EXECUTABLE -DCMAKE_CXX_FLAGS='-std=c++14 -nostdinc++ -ITEMPLATE_CLANG_CPP_HEADERS' -DCMAKE_EXE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_SHARED_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_MODULE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' ..",
            "cd lang/c++/build; env LD_LIBRARY_PATH='TEMPLATE_CLANG_CPP_LIBRARIES:/TEMPLATE_CLANG_RUNTIME_RPATH:/TEMPLATE_BOOST_ROOT/lib' make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "cd lang/c++/build",
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin","include","lib"],
        "interdependencies": [
            "boost",
            "clang-runtime"
        ]
    },
    "boost": {
        "git_repository": "https://github.com/boostorg/boost",
        "commitish": "boost-1.81.0",
        "version_string": "1.81.0",
        "license": "Boost Software License 1.0",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "git submodule update --init",
            "./bootstrap.sh --prefix=TEMPLATE_INSTALL_PREFIX --with-python=/usr/bin/python3",
            "./b2 headers",
            "./b2 install toolset=clang --without-mpi threading=multi link=shared cxxflags='-fPIC -DBOOST_SYSTEM_NO_DEPRECATED -stdlib=libc++ -std=c++14 -nostdinc++ -ITEMPLATE_CLANG_CPP_HEADERS' linkflags='-stdlib=libc++ -Wl,-rpath,/TEMPLATE_CLANG_RUNTIME_RPATH:/TEMPLATE_BOOST_RPATH' -jTEMPLATE_JOBS"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include","lib"],
        "interdependencies": [
            "clang-runtime"
        ],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "zlib",
                    "bzip2-libs",
                    "xz-libs"
                ],
                "8": [
                    "zlib",
                    "bzip2-libs",
                    "xz-libs",
                    "libzstd"
                ],
                "9": [
                    "zlib",
                    "bzip2-libs",
                    "xz-libs"
                ]
            },
            "debian": {
                "11": [
                    "libz1",
                    "libbz2-1.0",
                    "libicu67"
                ],
                "12": [
                    "libz1",
                    "libbz2-1.0",
                    "libicu72"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libz1",
                    "libbz2-1.0",
                    "libicu66"
                ],
                "22.04": [
                    "libz1",
                    "libbz2-1.0",
                    "libicu70"
                ]
            }
        }
    },
    "catch2": {
        "commitish": "v2.13.8",
        "version_string": "2.13.8",
        "license": "Boost Software License 1.0",
        "consortium_build_number": "0",
        "package_revision": "2",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; TEMPLATE_CMAKE_EXECUTABLE .. -G'Unix Makefiles' -DCMAKE_USER_MAKE_RULES_OVERRIDE=TEMPLATE_SCRIPT_PATH/ClangOverrides.txt -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_INSTALL_LIBDIR=lib -DCATCH_USE_VALGRIND=OFF -DCATCH_BUILD_EXAMPLES=OFF -DCATCH_ENABLE_COVERAGE=OFF -DCATCH_ENABLE_WERROR=OFF -DCATCH_BUILD_TESTING=OFF -DBUILD_TESTING=OFF",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include","lib","share"]
    },
    "clang": {
        "commitish": "llvmorg-13.0.0",
        "version_string": "13.0.0",
        "license": "LLVM",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "TEMPLATE_CMAKE_EXECUTABLE -G 'Unix Makefiles' -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DPYTHON_EXECUTABLE=TEMPLATE_PYTHON_EXECUTABLE -DLLVM_ENABLE_PROJECTS='clang;libcxx;libcxxabi;clang-tools-extra;compiler-rt;' ../llvm-project/llvm",
            "make -jTEMPLATE_JOBS",
            "make -jTEMPLATE_JOBS check-clang-tools",
            "make -jTEMPLATE_JOBS install",
            "cp ./libexec/c++-analyzer TEMPLATE_INSTALL_PREFIX/bin",
            "cp ./libexec/ccc-analyzer TEMPLATE_INSTALL_PREFIX/bin"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin","include","lib","share"],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "zlib",
                    "libstdc++",
                    "ncurses-libs",
                    "libxml2"
                ],
                "8": [
                    "zlib",
                    "libstdc++",
                    "ncurses-libs",
                    "libxml2"
                ],
                "9": [
                    "zlib",
                    "libstdc++",
                    "ncurses-libs",
                    "libxml2"
                ]
            },
            "debian": {
                "11": [
                    "libz1",
                    "libstdc++6",
                    "libtinfo6",
                    "libxml2"
                ],
                "12": [
                    "libz1",
                    "libstdc++6",
                    "libtinfo6",
                    "libxml2"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libz1",
                    "libstdc++6",
                    "libtinfo6",
                    "libxml2"
                ],
                "22.04": [
                    "libz1",
                    "libstdc++6",
                    "libtinfo6",
                    "libxml2"
                ]
            }
        }
    },
    "clang-runtime": {
        "commitish": "not-used-same-as-clang",
        "version_string": "13.0.0",
        "license": "LLVM",
        "consortium_build_number": "0",
        "package_revision": "2",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p TEMPLATE_INSTALL_PREFIX/lib",
            "cp ../../TEMPLATE_CLANG_SUBDIRECTORY/lib/libc++.so.1.0 TEMPLATE_INSTALL_PREFIX/lib/",
            "cd TEMPLATE_INSTALL_PREFIX/lib; ln -sf libc++.so.1.0 libc++.so.1 && ln -sf libc++.so.1 libc++.so",
            "cp ../../TEMPLATE_CLANG_SUBDIRECTORY/lib/libc++abi.so.1.0 TEMPLATE_INSTALL_PREFIX/lib/",
            "cd TEMPLATE_INSTALL_PREFIX/lib; ln -sf libc++abi.so.1.0 libc++abi.so.1 && ln -sf libc++abi.so.1 libc++abi.so"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["lib"]
    },
    "cmake": {
        "commitish": "v3.21.4",
        "version_string": "3.21.4",
        "license": "BSD 3-Clause",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "./configure --prefix=TEMPLATE_INSTALL_PREFIX --parallel=TEMPLATE_JOBS",
            "make -jTEMPLATE_JOBS",
            "make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin","doc","share"],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "libstdc++",
                    "ncurses-libs",
                    "openssl-libs"
                ],
                "8": [
                    "libstdc++",
                    "ncurses-libs",
                    "openssl-libs"
                ],
                "9": [
                    "libstdc++",
                    "ncurses-libs",
                    "openssl-libs"
                ]
            },
            "debian": {
                "11": [
                    "libncurses6",
                    "libstdc++6",
                    "libssl1.1",
                    "libtinfo6"
                ],
                "12": [
                    "libncurses6",
                    "libstdc++6",
                    "libssl3",
                    "libtinfo6"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libncurses6",
                    "libstdc++6",
                    "libssl1.1",
                    "libtinfo6"
                ],
                "22.04": [
                    "libncurses6",
                    "libstdc++6",
                    "libssl3",
                    "libtinfo6"
                ]
            }
        }
    },
    "cppzmq": {
        "commitish": "v4.8.1",
        "version_string": "4.8.1",
        "license": "LGPL v3",
        "consortium_build_number": "1",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; TEMPLATE_CMAKE_EXECUTABLE .. -G'Unix Makefiles' -DCMAKE_USER_MAKE_RULES_OVERRIDE=TEMPLATE_SCRIPT_PATH/ClangOverrides.txt -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_INSTALL_LIBDIR=lib -DZeroMQ_INCLUDE_DIR=TEMPLATE_ZMQ_PATH/include -DZeroMQ_INCLUDE_DIR=TEMPLATE_ZMQ_PATH/include -DZeroMQ_LIBRARY=TEMPLATE_ZMQ_PATH/lib/libzmq.so -Dpkgcfg_lib_PC_LIBZMQ_zmq=TEMPLATE_ZMQ_PATH/lib/libzmq.so -DCPPZMQ_BUILD_TESTS=OFF -DCPPZMQ_CMAKECONFIG_INSTALL_DIR=lib/cmake/cppzmq",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include","lib"],
        "interdependencies": [
            "zeromq4-1"
        ]
    },
    "fmt": {
        "commitish": "8.1.1",
        "version_string": "8.1.1",
        "license": "MIT",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; rm -f CMakeCache.txt;TEMPLATE_CMAKE_EXECUTABLE -G'Unix Makefiles' -DCMAKE_CXX_COMPILER=TEMPLATE_CLANGPP_EXECUTABLE -DCMAKE_C_COMPILER=TEMPLATE_CLANG_EXECUTABLE -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_SHARED_LIBS=TRUE -DFMT_TEST=OFF -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_CXX_FLAGS='-std=c++17 -nostdinc++ -ITEMPLATE_CLANG_CPP_HEADERS' -DCMAKE_EXE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_SHARED_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_MODULE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' ..",
            "cd build; make fmt install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include", "lib"],
        "interdependencies": [
            "clang-runtime"
        ]
    },
    "json": {
        "commitish": "v3.10.4",
        "version_string": "3.10.4",
        "license": "MIT",
        "consortium_build_number": "0",
        "package_revision": "2",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; TEMPLATE_CMAKE_EXECUTABLE .. -G'Unix Makefiles' -DCMAKE_USER_MAKE_RULES_OVERRIDE=TEMPLATE_SCRIPT_PATH/ClangOverrides.txt -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_INSTALL_LIBDIR=lib -DJSON_MultipleHeaders=ON",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include","lib"]
    },
    "jwt-cpp": {
        "enable_sha": true,
        "commitish": "ce1f9df3a9f861d136d6f0c93a6f811c364d1d3d",
        "version_string": "0.6.99.0",
        "license": "MIT",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; TEMPLATE_CMAKE_EXECUTABLE .. -G'Unix Makefiles' -DCMAKE_USER_MAKE_RULES_OVERRIDE=TEMPLATE_SCRIPT_PATH/ClangOverrides.txt -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_INSTALL_LIBDIR=lib -DJWT_BUILD_EXAMPLES=OFF -DJWT_DISABLE_PICOJSON=ON -Dnlohmann_json_ROOT=TEMPLATE_JSON_PATH -DJWT_CMAKE_FILES_INSTALL_DIR=lib/cmake/jwt-cpp",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include","lib"],
        "interdependencies": [
            "json"
        ]
    },
    "libarchive": {
        "commitish": "v3.5.2",
        "version_string": "3.5.2",
        "license": "BSD 2-Clause",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "TEMPLATE_CMAKE_EXECUTABLE -DCMAKE_USER_MAKE_RULES_OVERRIDE=TEMPLATE_SCRIPT_PATH/ClangOverrides.txt -DCMAKE_C_FLAGS:STRING=-fPIC -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX .",
            "make -jTEMPLATE_JOBS",
            "make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin","include","lib","share"],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "zlib",
                    "bzip2-libs",
                    "openssl-libs",
                    "libxml2",
                    "xz-libs >= 5.2.2"
                ],
                "8": [
                    "zlib",
                    "bzip2-libs",
                    "openssl-libs",
                    "libxml2",
                    "xz-libs >= 5.2.2",
                    "libzstd"
                ],
                "9": [
                    "zlib",
                    "bzip2-libs",
                    "openssl-libs",
                    "libxml2",
                    "xz-libs >= 5.2.2"
                ]
            },
            "debian": {
                "11": [
                    "libz1",
                    "libbz2-1.0",
                    "libssl1.1",
                    "libxml2"
                ],
                "12": [
                    "libz1",
                    "libbz2-1.0",
                    "libssl3",
                    "libxml2"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libz1",
                    "libbz2-1.0",
                    "libssl1.1",
                    "libxml2"
                ],
                "22.04": [
                    "libz1",
                    "libbz2-1.0",
                    "libssl3",
                    "libxml2"
                ]
            }
        }
    },
    "mungefs": {
        "commitish": "1.0.7",
        "version_string": "1.0.7",
        "license": "BSD 3-Clause",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; rm -f CMakeCache.txt;TEMPLATE_CMAKE_EXECUTABLE -G 'Unix Makefiles' -Dcppzmq_INCLUDE_DIR=TEMPLATE_CPPZMQ_PATH/include -DZeroMQ_INCLUDE_DIR=TEMPLATE_ZMQ_PATH/include -DZeroMQ_LIBRARY=TEMPLATE_ZMQ_PATH/lib/libzmq.so -DAVROCPP_INCLUDE_DIR=TEMPLATE_AVRO_PATH/include -DAVROCPP_LIBRARY=TEMPLATE_AVRO_PATH/lib/libavrocpp.so -DAVROCPP_AVROGEN_EXECUTABLE=TEMPLATE_AVRO_PATH/bin/avrogencpp -DBOOST_ROOT=TEMPLATE_BOOST_ROOT -DLibArchive_INCLUDE_DIRS=TEMPLATE_LIBARCHIVE_PATH/include -DLibArchive_LIBRARIES=TEMPLATE_LIBARCHIVE_PATH/lib/libarchive.so -DLibArchive_INCLUDE_DIR=TEMPLATE_LIBARCHIVE_PATH/include -DLibArchive_LIBRARY=TEMPLATE_LIBARCHIVE_PATH/lib/libarchive.so -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_CXX_COMPILER=TEMPLATE_CLANGPP_EXECUTABLE -DCMAKE_C_COMPILER=TEMPLATE_CLANG_EXECUTABLE -DCMAKE_CXX_FLAGS='-nostdinc++ -Wno-deprecated-declarations -ITEMPLATE_CLANG_CPP_HEADERS' -DCMAKE_EXE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_SHARED_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_MODULE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_INSTALL_RPATH=/TEMPLATE_BOOST_RPATH\\;/TEMPLATE_AVRO_RPATH\\;/TEMPLATE_ZMQ_RPATH\\;/TEMPLATE_LIBARCHIVE_RPATH\\;/TEMPLATE_CLANG_RUNTIME_RPATH ..",
            "cd build; env LD_LIBRARY_PATH=TEMPLATE_CLANG_CPP_LIBRARIES:TEMPLATE_BOOST_ROOT/lib make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin"],
        "interdependencies": [
            "clang-runtime",
            "boost",
            "libarchive",
            "avro",
            "zeromq4-1"
        ],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "fuse-libs"
                ],
                "8": [
                    "fuse-libs"
                ],
                "9": [
                    "fuse-libs"
                ]
            },
            "debian": {
                "11": [
                    "libfuse2"
                ],
                "12": [
                    "libfuse2"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libfuse2"
                ],
                "22.04": [
                    "libfuse2"
                ]
            }
        }
    },
    "nanodbc": {
        "commitish": "v2.13.0",
        "version_string": "2.13.0",
        "license": "MIT",
        "consortium_build_number": "1",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; rm -f CMakeCache.txt;TEMPLATE_CMAKE_EXECUTABLE -G'Unix Makefiles' -DCMAKE_CXX_COMPILER=TEMPLATE_CLANGPP_EXECUTABLE -DCMAKE_C_COMPILER=TEMPLATE_CLANG_EXECUTABLE -DBUILD_SHARED_LIBS=ON -DNANODBC_DISABLE_EXAMPLES=ON -DNANODBC_DISABLE_TESTS=ON -DNANODBC_ODBC_VERSION=SQL_OV_ODBC3 -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_CXX_FLAGS='-std=c++14 -ITEMPLATE_CLANG_CPP_HEADERS' -DCMAKE_EXE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_SHARED_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_MODULE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' ..",
            "cd build; make nanodbc install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include", "lib"],
        "interdependencies": [
            "clang-runtime"
        ],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "unixODBC"
                ],
                "8": [
                    "unixODBC"
                ],
                "9": [
                    "unixODBC"
                ]
            },
            "debian": {
                "1": [
                    "libodbc1"
                ],
                "12": [
                    "libodbc2"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libodbc1"
                ],
                "22.04": [
                    "libodbc2"
                ]
            }
        }
    },
    "qpid-proton": {
        "commitish": "0.36.0",
        "version_string": "0.36.0",
        "license": "Apache License 2.0",
        "consortium_build_number": "1",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; TEMPLATE_CMAKE_EXECUTABLE -DCMAKE_CXX_COMPILER=TEMPLATE_CLANGPP_EXECUTABLE -DCMAKE_C_COMPILER=TEMPLATE_CLANG_EXECUTABLE -DENABLE_WARNING_ERROR=OFF -DCMAKE_CXX_FLAGS='-nostdinc++ -ITEMPLATE_CLANG_CPP_HEADERS' -DCMAKE_SHARED_LINKER_FLAGS='-LTEMPLATE_CLANG_CPP_LIBRARIES -stdlib=libc++' -DCMAKE_EXE_LINKER_FLAGS='-LTEMPLATE_CLANG_CPP_LIBRARIES -stdlib=libc++' -DCMAKE_BUILD_WITH_INSTALL_RPATH=True -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_INSTALL_RPATH=/TEMPLATE_CLANG_RUNTIME_RPATH\\;/TEMPLATE_QPID_PROTON_RPATH -DBUILD_JAVA=OFF -DBUILD_RUBY=OFF -DBUILD_PYTHON=OFF -DSYSINSTALL_BINDINGS=OFF -DENABLE_JSONCPP=OFF -DENABLE_LINKTIME_OPTIMIZATION=NO -DLIB_SUFFIX='' ..",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include", "lib"],
        "interdependencies": [
            "clang-runtime"
        ],
        "distro_dependencies": {
            "rhel": {
                "7": [
                    "openssl-libs"
                ],
                "8": [
                    "openssl-libs"
                ],
                "9": [
                    "openssl-libs"
                ]
            },
            "debian": {
                "11": [
                    "libssl1.1"
                ],
                "12": [
                    "libssl3"
                ]
            },
            "ubuntu": {
                "20.04": [
                    "libssl1.1"
                ],
                "22.04": [
                    "libssl3"
                ]
            }
        }
    },
    "redis": {
        "commitish": "4.0.10",
        "version_string": "4.0.10",
        "license": "BSD 3-Clause",
        "consortium_build_number": "0",
        "package_revision": "2",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "make -jTEMPLATE_JOBS",
            "make install PREFIX=TEMPLATE_INSTALL_PREFIX"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin"]
    },
    "spdlog": {
        "commitish": "v1.9.2",
        "version_string": "1.9.2",
        "license": "MIT",
        "consortium_build_number": "1",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; TEMPLATE_CMAKE_EXECUTABLE .. -G'Unix Makefiles' -DCMAKE_USER_MAKE_RULES_OVERRIDE=TEMPLATE_SCRIPT_PATH/ClangOverrides.txt -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_INSTALL_LIBDIR=lib -Dfmt_DIR=TEMPLATE_FMT_PATH/lib/cmake/fmt -DSPDLOG_FMT_EXTERNAL=ON -DSPDLOG_BUILD_BENCH=OFF -DSPDLOG_BUILD_EXAMPLE=OFF",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["include","lib"],
        "interdependencies": [
            "fmt"
        ]
    },
    "zeromq4-1": {
        "commitish": "v4.1.8",
        "version_string": "4.1.8",
        "license": "LGPL v3",
        "consortium_build_number": "0",
        "package_revision": "3",
        "externals_root": "opt/irods-externals",
        "build_steps": [
            "mkdir -p build",
            "cd build; env LD_LIBRARY_PATH=TEMPLATE_CLANG_CPP_LIBRARIES TEMPLATE_CMAKE_EXECUTABLE -G 'Unix Makefiles' -DCMAKE_INSTALL_PREFIX=TEMPLATE_INSTALL_PREFIX -DCMAKE_CXX_COMPILER=TEMPLATE_CLANGPP_EXECUTABLE -DCMAKE_C_COMPILER=TEMPLATE_CLANG_EXECUTABLE -DCMAKE_CXX_FLAGS='-std=c++14 -nostdinc++ -ITEMPLATE_CLANG_CPP_HEADERS' -DCMAKE_EXE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_SHARED_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_MODULE_LINKER_FLAGS='-stdlib=libc++ -LTEMPLATE_CLANG_CPP_LIBRARIES -lc++abi' -DCMAKE_INSTALL_RPATH=/TEMPLATE_CLANG_RUNTIME_RPATH ..",
            "cd build; make -jTEMPLATE_JOBS; make install"
        ],
        "external_build_steps": [
            "ls -l TEMPLATE_INSTALL_PREFIX/../* ; cp -rf TEMPLATE_INSTALL_PREFIX/../* ../../ ; ls -l ../../"
        ],
        "fpm_directories": ["bin","include","lib"],
        "interdependencies": [
            "clang-runtime"
        ]
    }
}
